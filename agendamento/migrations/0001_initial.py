# Generated by Django 4.1.6 on 2023-02-18 15:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BaseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criação:"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualização:"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome:")),
                ("street", models.CharField(max_length=60, verbose_name="Rua:")),
                ("number", models.CharField(max_length=10, verbose_name="Número:")),
                ("district", models.CharField(max_length=60, verbose_name="Bairro:")),
                ("city", models.CharField(max_length=60, verbose_name="Cidade:")),
                ("state", models.CharField(max_length=2, verbose_name="Estado:")),
                ("zipcode", models.CharField(max_length=9, verbose_name="CEP:")),
                ("phone", models.CharField(max_length=20, verbose_name="Telefone:")),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome:")),
                (
                    "position",
                    models.CharField(
                        choices=[("G", "Gerente"), ("A", "Atendente"), ("H", "Helper")],
                        max_length=1,
                        verbose_name="Cargo:",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pessoa",
                "verbose_name_plural": "Pessoas",
            },
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="agendamento.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Serviço:")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Preço:"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Ativo:")),
            ],
            options={
                "verbose_name": "Serviço",
                "verbose_name_plural": "Serviços",
            },
            bases=("agendamento.basemodel",),
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="agendamento.basemodel",
                    ),
                ),
                (
                    "payment",
                    models.CharField(
                        choices=[
                            ("D", "Dinheiro"),
                            ("C", "Cartão de Crédito"),
                            ("D", "Débito"),
                            ("P", "Pix"),
                        ],
                        max_length=1,
                        verbose_name="Metodo de Pagamento:",
                    ),
                ),
                ("date", models.DateTimeField(verbose_name="Data do atendimento:")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("P", "Pendente"),
                            ("C", "Cancelado"),
                            ("R", "Realizado"),
                        ],
                        max_length=1,
                        verbose_name="Situação:",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agendamento.client",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agendamento.employee",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="agendamento.services",
                    ),
                ),
            ],
            options={
                "verbose_name": "Agendamento",
                "verbose_name_plural": "Agendamentos",
            },
            bases=("agendamento.basemodel",),
        ),
    ]
